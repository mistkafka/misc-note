#+TITLE: Shell琐碎笔记

* alias相关
** 定义alias
通过 =alias= 命令来定义一个alias。例如：

#+BEGIN_SRC bash
$ alias git-pull='git pull'
#+END_SRC

** 显示alias
显示所有的alias：

#+BEGIN_SRC bash
$ alias
alias xxx='xf sd'
alias yyy='sdf sdf'
...
#+END_SRC

显示某个alias：

#+BEGIN_SRC bash
  $ alias git-pull
  alias git-pull='git pull'
#+END_SRC

** 移除alias
使用 =unalias= 命令来移除一个alias。例如：

#+BEGIN_SRC bash
$ unalias git-pull
#+END_SRC

** 禁用alias
因为alias的魔力，会让坏人做出这样的事情来：

#+NAME: 可怕的alias
#+BEGIN_SRC bash
  $ alias ls='sudo rm -rf xxx' 	# 如果xxx是 '/'，那后果不敢想象
#+END_SRC

所以，在安全性要求高的环境里，应该避免执行任何一个alias！避免的方式有：

1. 使用命令的完整路径。
   例如执行 =ls= 的时候输入 =/bin/ls=

2. 使用一些安全“命令”。
   使用命令的完整路径其实是比较繁琐的。这时候可以使用一些安全命令。以下几种方式都是运行安全命令的方式：

#+BEGIN_SRC bash
$ command ls
$ \ls
$ 'ls'
$ "ls"
#+END_SRC

3. 登录环境后unalias掉所有的alias。
   可以写一个脚本来逐个 =unalias= 掉所有的alias。但是这并不能完全保证禁用alias。可能再你unalias掉所有
   的alias之后，执行的某个脚本里又定义了一堆邪恶的alias  

* 环境变量相关
** 设置环境变量
可以通过 =export= 命令来设置环境变量

#+BEGIN_SRC bash
$ export MY_NAME="hehe"
#+END_SRC

** 显示所有环境变量
同样是通过 =export= 命令来显示环境变量

#+BEGIN_SRC bash
$ export
declare -x GPG_TTY="/dev/ttys000"
declare -x HOME="/Users/mistkafka"
... ...
#+END_SRC

** 移除环境变量
可以通过 =unset= 命令来移除环境变量

#+BEGIN_SRC bash
$ unset MY_NAME
#+END_SRC

** set、env、export的区别
TODO: http://hackjutsu.com/2016/08/04/Difference%20between%20set,%20export%20and%20env%20in%20bash/
