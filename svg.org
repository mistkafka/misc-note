#+TITLE: SVG

svg平时只是使用，从没自己写过。这几天在RN上手写一个雷达图。顺便简单记录一下一些知识点。


* 矢量图
  svg是矢量图，这意味着里面用到的各个数值，其实都是没有长度单位概念的。虽然svg元素的width、 height有默认的长度单位，但这个其实已经不是svg的定义部分了。

* 一些通用的属性
  - stroke :: 笔画的颜色
  - stroke-width :: 笔画的宽度。这里的宽度，是均匀分布在轨迹两边的，也就是说，如果宽度是20，那么从(10, 0)到(10, 10)的笔画，会覆盖的区域是：(0, 0) (20, 0) (0, 10) (20, 10)所围城的矩形。
  - fill :: 区域的填充颜色。所谓的区域，是笔画所包围成的区域。如果笔画没有闭合围城一个区域，也会把笔画的起始跟终点连接起来构成区域。

* 一些基本图形
  html的svg直接提供了一些绘制简单图形的元素。如:
  - Circle :: 圆
  - Rect :: 矩形
  - Ellipse :: 椭圆
  - Line :: 线段
  - Polyline :: 多线段
  - Polygon :: 多边形


  这些图形都算比较简单，只要理解对应图形的数学知识就能很好应用。

* Path的命令
  Path也算是一个图形。不过，它其实是一个“通用”的图形，上面介绍的基本图形都能通过Path来绘制。

  - Move to :: 画笔移动到某点
  - Line to :: 从当前点，绘制直线到某点。其衍生的快捷命令还有Horizontal to跟Veritical to，顾名思义就是绘制水平、垂直线。
  - Arc to :: 从=当前点=，绘制一段到某点的圆弧。这里我一直理解错，所以总有这样的疑问：“为何只知道圆点跟终点，如何能绘制出一段圆弧？” 特别注意：是从当前点。所以这个命令，没有Move to的配合，一般是画不出你想要的圆弧的。
  - 其它曲线命令 :: 剩余的曲线命令是用来绘制贝滋曲线的。恕我学浅，愣是没搞懂这个曲线。图形的关键还是掌握其几何数学知识，没掌握光记住命令、属性也是白搞。

** 命令的缩写、大小写、与坐标点简写
   - 缩写 :: 所有命令的缩写，都是命令的首字母
   - 大小写 :: 大写表示决定定位，小写表示相对当前点定位
   - 简写 :: 命令后面可以直接跟数字，不用加空格。这样写起来更紧凑，清晰（因为命令很多的时候，数字跟自己的命令写在一起会清晰）。 
