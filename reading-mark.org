#+TITLE: Reading Mark

* 说明
  这里存放自己日常阅读的一些摘录。比较懒，所以在这里不记录任何感想。

  有时候，未必会写摘录，而只是写个原文的引用。

  虽然不谢感想，但是我可能会记一下阅读后的困惑~。

* [[http://www.yinwang.org/blog-cn/2018/02/22/smart-contract][《智能合约和形式验证》]]王垠
  #+BEGIN_QUOTE
  奢望过多的功能其实是一种过度工程（over-engineering）。
  #+END_QUOTE
  
* [[http://www.yinwang.org/blog-cn/2017/11/09/iphone-x][《iPhone X》]] 王垠
  #+BEGIN_QUOTE
  对于“简单”的偏执理解，带来的不是真正的简单，而是复杂和混淆。在 CIIA 报告中，我引用了爱因斯坦的一句话：“Make things as simple as possible, but not simpler. ” 这句话指出了苹果的设计中存在的偏执心理。如果你的设计超过了最大可能实现的简单，它就开始变得复杂。
  #+END_QUOTE

  #+BEGIN_QUOTE
  去掉 Home 键的原因，是想把手机做成“全面屏”的，但我很不理解“全面屏”到底有什么意义。iPhone 6 那么大的屏幕对于普通人来说已经足够大了，实在觉得不够的话，你可以用 plus 版本啊。

  全面屏的手机没有了空白边沿，所以你的手不再有足够的抓握空间。本来拿着手机看东西的时候，下面的白边是一个很舒服的可以用拇指拿住的地方，跟拿一本小人书似的。看视频的时候更是如此，把手机横过来看视频，你会发现拇指自然地拿住那个空白位置。

  现在这个空白没有了，所以你得用不舒服的姿势拿手机。你只有最外面的边沿可以抓，而那个边沿是很滑的。所以你必须给它买个防滑的壳子，就算如此也不一定能抓稳。
  #+END_QUOTE

* [[http://www.yinwang.org/blog-cn/2017/11/01/power-of-reasoning][《理性的力量》]] 王垠

* [[http://www.yinwang.org/blog-cn/2017/10/16/ergonomics][《人体工学》]] 王垠
  #+BEGIN_QUOTE
  起初你也许没有发现问题，但是时间久了你就会发现，小指负责的键实在太多了！中指和无名指这么长的指头，才管 4 个键，右边小指却要管 16 个键，是中指和无名指的四倍之多！左边的小指也要负责 11 个键。这是很不公平的。
  #+END_QUOTE

  #+BEGIN_QUOTE
  另外我必须提醒大家，不要一味的追求打字的速度。除非你的工作是专业打字员，不动脑子，专门帮别人输入已经写好的文档，否则你其实不需要非常快的打字速度，一刻都不停。不管是写程序，写文章还是做设计，思考的优先级都是高于打字的。思考是需要时间的，而我思考的速度，几乎总是比我能打字的最高速度慢。

  所以为了思考，我打字总是需要停下来，等我的脑子跟上。很多人不但打字快，而且他的手不等他的脑子，所以这种人经常写出很多垃圾代码，垃圾文章 :p 如果你稍微对代码或者文章负责一些，就会发现为了按组合键而损失的那点时间，比起平时为思维停顿的时间，那真的不算什么。
  #+END_QUOTE

  所以，王垠macbook pro那么烫，你是如何直接使用机载键盘的？T_T ...

* [[http://www.yinwang.org/blog-cn/2017/07/06/cat-travel-china][《带猫回国经历》]] 王垠

* [[http://www.yinwang.org/blog-cn/2017/05/17/practical-idealism][《什么是现实理想主义者》]] 王垠
  #+BEGIN_QUOTE
  虽然我同情他丢了工作，然而我并不认同这种不经同意就推翻重写别人代码的作法。实际上我曾经跟一个老喜欢重写别人代码的人合作，后来整个团队（包括我）都差点被他给弄疯了。所以我对他说：“你不可以这样改别人的代码的！如果我是你老板，可能不会开掉你，却也会给你一个严重警告的。”
  #+END_QUOTE

  #+BEGIN_QUOTE
  首先，我尽量保持别人的代码原封不动。因为别人的代码解决的问题，很可能不是我当前需要解决的问题。因为看不顺眼而去改别人的代码，不但分散自己的精力，而且有可能制造新的 bug，导致新老代码中同时多处出现 bug，难以追踪和修复。为了保持别人的代码原封不动，却又让自己写的新代码简单优雅，我必须理解原有代码的接口（interface），以及它原有的各种特征，我力求保持它们不变。这就像外科大夫做换心手术，他必须保证已有的血管都连接到正确的地方。

  我喜欢把自己的代码做成一个可替换的，模块化的元件，可以随时在系统里插入或者移除。一旦发现出了问题，我可以随时切换到原来的代码，重新测试，这样我就可以知道问题出在原来的代码，还是出在我的新代码里面。另外，我还会注意避免对已有函数进行换名，这样我可以把自己的修改局限在一个或者少数几个文件里面，避免 Git 的历史里面出现不必要的，让人分心的修改。就算要换名也应该单独作为 commit，而不应该跟逻辑的修改混在一起。
  #+END_QUOTE

* [[http://www.yinwang.org/blog-cn/2017/04/23/ai][《人工智能》]] 王垠
  #+BEGIN_QUOTE
  自动编程是不可能的
  #+END_QUOTE

  #+BEGIN_QUOTE
  傻机器的价值
  #+END_QUOTE

  #+BEGIN_QUOTE
  有句话说得好：编程不过是一门失传的艺术的别名，这门艺术的名字叫做“思考”。
  #+END_QUOTE

* [[http://www.yinwang.org/blog-cn/2017/04/14/experience-and-insight][《经验和洞察力》]] 王垠
  #+BEGIN_QUOTE
  什么是洞察力？洞察力就是透过现象看到本质的能力。有洞察力的人很容易得到经验，然而有经验的人却不一定有洞察力。再愚钝的人，总是可以通过大量的时间获取经验，然而就算你花再多的时间和精力，也难以得到洞察力。所以洞察力是比经验宝贵很多的东西。很难说清楚如何才能有洞察力，也很少有人会告诉你如何去得到它。当然，我也不会告诉你。
  #+END_QUOTE

  #+BEGIN_QUOTE
  经验虽然不是最重要的，然而还是有必要的。
  #+END_QUOTE

* [[http://www.yinwang.org/blog-cn/2016/10/12/compiler-bug][《C 编译器优化过程中的 Bug》]] 王垠
  #+BEGIN_QUOTE
  #+END_QUOTE
